_________________________________________________________________________________________________________
commands:

INJECTOR
sudo python -m SimpleHTTPServer 80 ->(for starting simple http server)

start injector and read hostnames from file
sudo python  dns_packet_injector.py  -h hostnames

start injector to monitor all the interfaces
sudo python  dns_packet_injector.py

start injector to monitor on particular interface
sudo python  dns_packet_injector.py -i enp0s3

start injector to monitor on particular interface and expression
sudo python  dns_packet_injector.py -i enp0s3 ip src 172.24.17.226



------------------------------------------------------------------------------------------------------
DETECTOR
start detector and read from pcap file ::
sudo python dns_packet_detector.py

output::
2017-12-09 22:52:25 DNS poisoning attempt
TXID 61345 Request 0.client-channel.google.com.
Answer1 172.24.24.212
Answer2 173.194.204.189


2017-12-09 22:52:25 DNS poisoning attempt
TXID 61345 Request 0.client-channel.google.com.
Answer1 172.24.24.212
Answer2 173.194.204.189


2017-12-09 22:52:44 DNS poisoning attempt
TXID 22110 Request mail.google.com.
Answer1 172.24.24.212
Answer2 172.217.12.165

*****************************************************************************************************************
sudo python dns_packet_detector.py -r /home/osboxes/Desktop/inject_capture.pcapng
output ::
1981-02-28 21:28:58 DNS poisoning attempt
TXID 19258 Request bar6.pqr.com.

Answer1 
Answer2 172.24.24.212

--------------------------------------------------------------------------------------------------------
Software Details :
scapy version -  2.3.2
language used - python 2.7.12
os version - ubuntu 16.10 virtual machine(for injector)
and windows 10 for victim

--------------------------------------------------------------------------------------------------------------
pcap file
inject_capure.pcapng

packet filter
((frame.protocols=="eth:ethertype:ip:udp:dns")&&(dns.qry.name=="bar6.pqr.com"))
-----------------------------------------------------------------------------------------------------------------
Design :

Injector

1)1st step is to parse the arguments and get it into a argparse object
2)I  am using scapy sniff function to sniff the packets
3)so each packest is sent to packet spoofing function for further processig
4)here we 1st check if it is a valid dns packet with a query or not
5)Then we form a dns response packet with all the fields similar to actual response and
send this spoofed packet using python send method
6)if hostfile is provided then only those hostnames are rplyed back with the respective
ip addresses other wise all the hostnames are attacked

Detector
1)1st step is to parse the arguments and get it into a argparse object
2)For spoofing detection  basically all the previous DNS responses are hashed
3) when new packet arrives 1st we check if it is a valid dns response or not
4)The dst ip ,sport,dport and question name should match for the present dns packet and previous one
for initial level of screening

in the second level we eliminate false positives as follows

False positive detection
1)we check if mac address of the present packet and the stored packet are qual or not
if not there is a spoofing attempt
2) we check if at least one answer of response record  of the present packet and the stored packet are equal or not
if not there is a spoofing attempt
3)we also check the ttl field in the same way if there is a mismatch we conclude as some spoofing attack

---------------------------------------------------------------------------------------------------------------------
Reference -
https://www.sans.org/
https://thepacketgeek.com/scapy-p-09-scapy-and-dns/
https://stackoverflow.com/questions/24196932/how-can-i-get-the-ip-address-of-eth0-in-python

--------------------------------------------------------------------------------------------------------------------------



